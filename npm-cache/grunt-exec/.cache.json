{"_id":"grunt-exec","_rev":"31-575d6df313e574f51d453247728cb3d7","name":"grunt-exec","description":"Grunt task for executing shell commands.","dist-tags":{"latest":"0.4.3"},"versions":{"0.1.0":{"name":"grunt-exec","description":"Grunt task for executing shell commands.","version":"0.1.0","homepage":"https://github.com/Jake/grunt-exec","author":{"name":"Jake Harding","email":"jacob.s.harding@gmail.com"},"repository":{"type":"git","url":"git://github.com/Jake/grunt-exec.git"},"bugs":{"url":"https://github.com/Jake/grunt-exec/issues"},"licenses":[{"type":"MIT","url":"https://github.com/Jake/grunt-exec/blob/master/LICENSE-MIT"}],"main":"grunt.js","bin":{"grunt-exec":"bin/grunt-exec"},"engines":{"node":">=0.6.0"},"scripts":{"test":"grunt test"},"dependencies":{"grunt":"~0.3.7"},"devDependencies":{"grunt":"~0.3.7"},"keywords":["grunt","gruntplugin"],"_npmUser":{"name":"jharding","email":"jacob.s.harding@gmail.com"},"_id":"grunt-exec@0.1.0","optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.0-3","_nodeVersion":"v0.6.9","_defaultsLoaded":true,"dist":{"shasum":"1cf38ff7d82f9a2e2c54e11badfd3119df831cf8","tarball":"http://registry.npmjs.org/grunt-exec/-/grunt-exec-0.1.0.tgz"},"maintainers":[{"name":"jharding","email":"jacob.s.harding@gmail.com"}],"directories":{}},"0.1.1":{"name":"grunt-exec","description":"Grunt task for executing shell commands.","version":"0.1.1","homepage":"https://github.com/jharding/grunt-exec","author":{"name":"Jake Harding","email":"jacob.s.harding@gmail.com"},"repository":{"type":"git","url":"git://github.com/jharding/grunt-exec.git"},"bugs":{"url":"https://github.com/jharding/grunt-exec/issues"},"licenses":[{"type":"MIT","url":"https://github.com/jharding/grunt-exec/blob/master/LICENSE-MIT"}],"main":"grunt.js","bin":{"grunt-exec":"bin/grunt-exec"},"engines":{"node":">=0.6.0"},"scripts":{"test":"grunt test"},"dependencies":{"grunt":"~0.3.7"},"devDependencies":{"grunt":"~0.3.7"},"keywords":["grunt","gruntplugin"],"_npmUser":{"name":"jharding","email":"jacob.s.harding@gmail.com"},"_id":"grunt-exec@0.1.1","optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.0-3","_nodeVersion":"v0.6.9","_defaultsLoaded":true,"dist":{"shasum":"cbb7fc6776338a518a9639fa8116b0cb21948a0a","tarball":"http://registry.npmjs.org/grunt-exec/-/grunt-exec-0.1.1.tgz"},"maintainers":[{"name":"jharding","email":"jacob.s.harding@gmail.com"}],"directories":{}},"0.2.0":{"name":"grunt-exec","description":"Grunt task for executing shell commands.","version":"0.2.0","homepage":"https://github.com/jharding/grunt-exec","author":{"name":"Jake Harding","email":"jacob.s.harding@gmail.com"},"repository":{"type":"git","url":"git://github.com/jharding/grunt-exec.git"},"bugs":{"url":"https://github.com/jharding/grunt-exec/issues"},"licenses":[{"type":"MIT","url":"https://github.com/jharding/grunt-exec/blob/master/LICENSE-MIT"}],"main":"grunt.js","bin":{"grunt-exec":"bin/grunt-exec"},"engines":{"node":">=0.6.0"},"scripts":{"test":"grunt test"},"dependencies":{"grunt":"~0.3.7"},"devDependencies":{"grunt":"~0.3.7"},"keywords":["grunt","gruntplugin"],"readme":"[![build status](https://secure.travis-ci.org/jharding/grunt-exec.png)](http://travis-ci.org/jharding/grunt-exec)\ngrunt-exec\n----------\n\nGrunt task for executing shell commands.\n\nGetting Started\n===============\n\nInstall this grunt plugin next to your project's [grunt.js gruntfile][getting_started] with: `npm install grunt-exec`\n\nThen add this line to your project's `grunt.js` gruntfile:\n\n```javascript\ngrunt.loadNpmTasks('grunt-exec');\n```\n\n[grunt]: https://github.com/cowboy/grunt\n[getting_started]: https://github.com/cowboy/grunt/blob/master/docs/getting_started.md\n\nDocumentation\n=============\n\nThis task is a [multi task][types_of_tasks], meaning that grunt will automatically iterate over all `exec` targets if a target is not specified.\n\nIf the command used outputs to stderr, grunt-exec will display a warning and abort grunt immediately. Grunt will continue processing tasks if the --force command-line option was specified.\n\n[types_of_tasks]: https://github.com/cowboy/grunt/blob/master/docs/types_of_tasks.md\n\n### Target Properties\n\n*   __command__*(required)*: The shell command to be executed. Must be a string.\n*   __stdout__*(optional)*: Set `true` if you want the stdout to be printed. Defaults to `false`.\n\n### Example\n\n```javascript\ngrunt.initConfig({\n  exec: {\n    remove_logs: {\n      command: 'rm -f *.log'\n    },\n    list_files: {\n      command: 'ls -l **',\n      stdout: true\n    }\n  }\n});\n```\n\nContributing\n============\n\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [grunt][grunt].\n\nRelease History\n===============\n\n*   __08/23/2012 - 0.2.0__: Warn on output to stderr and remove option to log stderr. \n*   __04/16/2012 - 0.1.1__: Fixed broken links on npm registry page.\n*   __04/08/2012 - 0.1.0__: Initial release.\n\nLicense\n=======\n\nCopyright (c) 2012 Jake Harding  \nLicensed under the MIT license.\n","_id":"grunt-exec@0.2.0","dist":{"shasum":"7341bce15554c51cb5c83220efd1c9454d361c8d","tarball":"http://registry.npmjs.org/grunt-exec/-/grunt-exec-0.2.0.tgz"},"_npmVersion":"1.1.49","_npmUser":{"name":"jharding","email":"jacob.s.harding@gmail.com"},"maintainers":[{"name":"jharding","email":"jacob.s.harding@gmail.com"}],"directories":{}},"0.2.1":{"name":"grunt-exec","description":"Grunt task for executing shell commands.","version":"0.2.1","homepage":"https://github.com/jharding/grunt-exec","author":{"name":"Jake Harding","email":"jacob.s.harding@gmail.com"},"repository":{"type":"git","url":"git://github.com/jharding/grunt-exec.git"},"bugs":{"url":"https://github.com/jharding/grunt-exec/issues"},"licenses":[{"type":"MIT","url":"https://github.com/jharding/grunt-exec/blob/master/LICENSE-MIT"}],"main":"grunt.js","bin":{"grunt-exec":"bin/grunt-exec"},"engines":{"node":">=0.6.0"},"scripts":{"test":"grunt test"},"devDependencies":{"grunt":"~0.3.7"},"keywords":["grunt","gruntplugin"],"readme":"[![build status](https://secure.travis-ci.org/jharding/grunt-exec.png)](http://travis-ci.org/jharding/grunt-exec)\ngrunt-exec\n==========\n\nGrunt task for executing shell commands.\n\nGetting Started\n---------------\n\nInstall this grunt plugin next to your project's [grunt.js gruntfile][getting_started] with: `npm install grunt-exec`\n\nThen add this line to your project's `grunt.js` gruntfile:\n\n```javascript\ngrunt.loadNpmTasks('grunt-exec');\n```\n\n[grunt]: https://github.com/cowboy/grunt\n[getting_started]: https://github.com/cowboy/grunt/blob/master/docs/getting_started.md\n\nDocumentation\n-------------\n\nThis task is a [multi task][types_of_tasks], meaning that grunt will automatically iterate over all `exec` targets if a target is not specified.\n\nIf the command used outputs to stderr, grunt-exec will display a warning and abort grunt immediately. Grunt will continue processing tasks if the --force command-line option was specified.\n\n[types_of_tasks]: https://github.com/cowboy/grunt/blob/master/docs/types_of_tasks.md\n\n### Target Properties\n\n*   __command__*(required)*: The shell command to be executed. Must be a string.\n*   __stdout__*(optional)*: Set `true` if you want the stdout to be printed. Defaults to `false`.\n\n### Example\n\n```javascript\ngrunt.initConfig({\n  exec: {\n    remove_logs: {\n      command: 'rm -f *.log'\n    },\n    list_files: {\n      command: 'ls -l **',\n      stdout: true\n    }\n  }\n});\n```\n\nContributing\n------------\n\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [grunt][grunt].\n\nRelease History\n---------------\n\n*   __08/28/2012 - 0.2.1__: Removed grunt as a dependency.\n*   __08/23/2012 - 0.2.0__: Warn on output to stderr and remove option to log stderr. \n*   __04/16/2012 - 0.1.1__: Fixed broken links on npm registry page.\n*   __04/08/2012 - 0.1.0__: Initial release.\n\nLicense\n-------\n\nCopyright (c) 2012 Jake Harding  \nLicensed under the MIT license.\n","_id":"grunt-exec@0.2.1","dist":{"shasum":"68b072233ba6a9e701a0eebccd095b7700786bdb","tarball":"http://registry.npmjs.org/grunt-exec/-/grunt-exec-0.2.1.tgz"},"_npmVersion":"1.1.59","_npmUser":{"name":"jharding","email":"jacob.s.harding@gmail.com"},"maintainers":[{"name":"jharding","email":"jacob.s.harding@gmail.com"}],"directories":{}},"0.3.0":{"name":"grunt-exec","description":"Grunt task for executing shell commands.","version":"0.3.0","homepage":"https://github.com/jharding/grunt-exec","author":{"name":"Jake Harding","email":"jacob.s.harding@gmail.com"},"repository":{"type":"git","url":"git://github.com/jharding/grunt-exec.git"},"bugs":{"url":"https://github.com/jharding/grunt-exec/issues"},"licenses":[{"type":"MIT","url":"https://github.com/jharding/grunt-exec/blob/master/LICENSE-MIT"}],"main":"grunt.js","bin":{"grunt-exec":"bin/grunt-exec"},"engines":{"node":">=0.6.0"},"scripts":{"test":"grunt test"},"devDependencies":{"grunt":"~0.3.7"},"keywords":["grunt","gruntplugin"],"readme":"[![build status](https://secure.travis-ci.org/jharding/grunt-exec.png)](http://travis-ci.org/jharding/grunt-exec)\ngrunt-exec\n==========\n\n> Grunt plugin for executing shell commands.\n\nGetting Started\n---------------\n\nInstall this grunt plugin next to your project's [grunt.js gruntfile][getting_started] with: `npm install grunt-exec`\n\nThen add this line to your project's `grunt.js` gruntfile:\n\n```javascript\ngrunt.loadNpmTasks('grunt-exec');\n```\n\n[grunt]: https://github.com/cowboy/grunt\n[getting_started]: https://github.com/cowboy/grunt/blob/master/docs/getting_started.md\n\nDocumentation\n-------------\n\nThis plugin is a [multi task][types_of_tasks], meaning that grunt will automatically iterate over all `exec` targets if a target is not specified.\n\nIf the command used outputs to stderr, grunt-exec will display a warning and abort grunt immediately. Grunt will continue processing tasks if the --force command-line option was specified.\n\n[types_of_tasks]: https://github.com/cowboy/grunt/blob/master/docs/types_of_tasks.md\n\n### Target Properties\n\n*   __command__*(required)*: The shell command to be executed. Must be a string or a function that returns a string.\n*   __stdout__*(optional)*: Set `true` if you want the stdout to be printed. Defaults to `false`.\n\n### Example\n\n```javascript\ngrunt.initConfig({\n  exec: {\n    remove_logs: {\n      command: 'rm -f *.log'\n    },\n    list_files: {\n      command: 'ls -l **',\n      stdout: true\n    },\n    echo_grunt_version: {\n      command: function(grunt) { return 'echo ' + grunt.version; },\n      stdout: true\n    }\n  }\n});\n```\n\nLicense\n-------\n\nCopyright (c) 2012 Jake Harding  \nLicensed under the MIT license.\n","_id":"grunt-exec@0.3.0","dist":{"shasum":"d34a2a328f8c4a059792d371637aa64e28521f47","tarball":"http://registry.npmjs.org/grunt-exec/-/grunt-exec-0.3.0.tgz"},"_npmVersion":"1.1.59","_npmUser":{"name":"jharding","email":"jacob.s.harding@gmail.com"},"maintainers":[{"name":"jharding","email":"jacob.s.harding@gmail.com"}],"directories":{}},"0.4.0":{"name":"grunt-exec","description":"Grunt task for executing shell commands.","version":"0.4.0","homepage":"https://github.com/jharding/grunt-exec","author":{"name":"Jake Harding","email":"jacob.s.harding@gmail.com"},"repository":{"type":"git","url":"git://github.com/jharding/grunt-exec.git"},"bugs":{"url":"https://github.com/jharding/grunt-exec/issues"},"licenses":[{"type":"MIT","url":"https://github.com/jharding/grunt-exec/blob/master/LICENSE-MIT"}],"main":"Gruntfile.js","engines":{"node":">=0.8.0"},"scripts":{"test":"/usr/bin/env node test/test.js"},"peerDependencies":{"grunt":"~0.4"},"devDependencies":{"grunt":"~0.4","grunt-contrib-jshint":"~0.1"},"keywords":["grunt","gruntplugin","shell"],"readme":"[![build status](https://secure.travis-ci.org/jharding/grunt-exec.png?branch=master)](http://travis-ci.org/jharding/grunt-exec)\ngrunt-exec\n==========\n\nGrunt plugin for executing shell commands.\n\nInstallation\n------------\n\nInstall grunt-exec using npm:\n\n```\n$ npm install grunt-exec\n```\n\nThen add this line to your project's *Gruntfile.js*:\n\n```javascript\ngrunt.loadNpmTasks('grunt-exec');\n```\n\nUsage\n-----\n\nThis plugin is a [multi task][types_of_tasks], meaning that grunt will automatically iterate over all exec targets if a target is not specified.\n\nIf the exit code generated by the specified shell command is greater than 0, grunt-exec will assume an error has occurred and will abort grunt immediately.\n\n[types_of_tasks]: https://github.com/gruntjs/grunt/blob/master/docs/types_of_tasks.md#multi-tasks\n\n### Properties\n\n*   __command__: The shell command to be executed. Must be a string or a function that returns a string. (alias: __cmd__)\n*   __stdout__: If `true`, stdout will be printed. Defaults to `true`.\n*   __stderr__: If `true`, stderr will be printed. Defaults to `true`.\n\n### Command Functions\n\nIf you plan on doing advanced stuff with grunt-exec, you'll most likely be using functions for the `command` property of your exec targets. This section details a couple of helpful tips about command functions that could help make your life easier.\n\n#### Passing arguments from the command line\n\nCommand functions can be called with arbitrary arguments. Let's say we have the following exec target that echoes a formatted name:\n\n```javascript\nexec: {\n  echo_name: {\n    cmd: function(firstName, lastName) {\n      var formattedName = [\n        lastName.toUpperCase(),\n        firstName.toUpperCase()\n      ].join(', ');\n\n      return 'echo ' + formattedName;\n    }\n  }\n}\n```\n\nIn order to get `SIMPSON, HOMER` echoed, you'd run `grunt exec:echo_name:homer:simpson` from the command line.\n\n### Accessing `grunt` object\n\nAll command functions are called in the context of the `grunt` object that they are being ran with. This means you can access the `grunt` object through `this`.\n\n### Example\n\nThe following examples are available in grunt-exec's Gruntfile.\n\n```javascript\ngrunt.initConfig({\n  exec: {\n    remove_logs: {\n      command: 'rm -f *.log',\n      stdout: false,\n      stderr: false\n    },\n    list_files: {\n      cmd: 'ls -l **'\n    },\n    echo_grunt_version: {\n      cmd: function() { return 'echo ' + this.version; }\n    },\n    echo_name: {\n      cmd: function(firstName, lastName) {\n        var formattedName = [\n          lastName.toUpperCase(),\n          firstName.toUpperCase()\n        ].join(', ');\n\n        return 'echo ' + formattedName;\n      }\n    }\n  }\n});\n```\n\nTesting\n-------\n\n```\n$ cd grunt-exec\n$ npm test\n```\n\nIssues\n------\n\nFound a bug? Create an issue on GitHub.\n\nhttps://github.com/jharding/grunt-exec/issues\n\nVersioning\n----------\n\nFor transparency and insight into the release cycle, releases will be numbered with the follow format:\n\n`<major>.<minor>.<patch>`\n\nAnd constructed with the following guidelines:\n\n* Breaking backwards compatibility bumps the major\n* New additions without breaking backwards compatibility bumps the minor\n* Bug fixes and misc changes bump the patch\n\nFor more information on semantic versioning, please visit http://semver.org/.\n\nLicense\n-------\n\nCopyright (c) 2012 [Jake Harding](http://thejakeharding.com)  \nLicensed under the MIT License.\n","readmeFilename":"README.md","_id":"grunt-exec@0.4.0","dist":{"shasum":"e6b9ed27217d8334dc5df832e8d6b3e4926ca1e2","tarball":"http://registry.npmjs.org/grunt-exec/-/grunt-exec-0.4.0.tgz"},"_npmVersion":"1.1.65","_npmUser":{"name":"jharding","email":"jacob.s.harding@gmail.com"},"maintainers":[{"name":"jharding","email":"jacob.s.harding@gmail.com"}],"directories":{}},"0.4.1":{"name":"grunt-exec","description":"Grunt task for executing shell commands.","version":"0.4.1","homepage":"https://github.com/jharding/grunt-exec","author":{"name":"Jake Harding","email":"jacob.s.harding@gmail.com"},"repository":{"type":"git","url":"git://github.com/jharding/grunt-exec.git"},"bugs":{"url":"https://github.com/jharding/grunt-exec/issues"},"licenses":[{"type":"MIT","url":"https://github.com/jharding/grunt-exec/blob/master/LICENSE-MIT"}],"main":"Gruntfile.js","engines":{"node":">=0.8.0"},"scripts":{"test":"/usr/bin/env node test/test.js"},"peerDependencies":{"grunt":"~0.4"},"devDependencies":{"grunt":"~0.4","grunt-contrib-jshint":"~0.1"},"keywords":["grunt","gruntplugin","shell"],"readme":"[![build status](https://secure.travis-ci.org/jharding/grunt-exec.png?branch=master)](http://travis-ci.org/jharding/grunt-exec)\ngrunt-exec\n==========\n\nGrunt plugin for executing shell commands.\n\nInstallation\n------------\n\nInstall grunt-exec using npm:\n\n```\n$ npm install grunt-exec\n```\n\nThen add this line to your project's *Gruntfile.js*:\n\n```javascript\ngrunt.loadNpmTasks('grunt-exec');\n```\n\nUsage\n-----\n\nThis plugin is a [multi task][types_of_tasks], meaning that grunt will automatically iterate over all exec targets if a target is not specified.\n\nIf the exit code generated by the specified shell command is greater than 0, grunt-exec will assume an error has occurred and will abort grunt immediately.\n\n[types_of_tasks]: https://github.com/gruntjs/grunt/blob/master/docs/types_of_tasks.md#multi-tasks\n\n### Properties\n\n*   __command__: The shell command to be executed. Must be a string or a function that returns a string. (alias: __cmd__)\n*   __stdout__: If `true`, stdout will be printed. Defaults to `true`.\n*   __stderr__: If `true`, stderr will be printed. Defaults to `true`.\n*   __cwd__: Current working directory of the shell command. Defaults to the directory containing your Gruntfile.\n\n### Command Functions\n\nIf you plan on doing advanced stuff with grunt-exec, you'll most likely be using functions for the `command` property of your exec targets. This section details a couple of helpful tips about command functions that could help make your life easier.\n\n#### Passing arguments from the command line\n\nCommand functions can be called with arbitrary arguments. Let's say we have the following exec target that echoes a formatted name:\n\n```javascript\nexec: {\n  echo_name: {\n    cmd: function(firstName, lastName) {\n      var formattedName = [\n        lastName.toUpperCase(),\n        firstName.toUpperCase()\n      ].join(', ');\n\n      return 'echo ' + formattedName;\n    }\n  }\n}\n```\n\nIn order to get `SIMPSON, HOMER` echoed, you'd run `grunt exec:echo_name:homer:simpson` from the command line.\n\n### Accessing `grunt` object\n\nAll command functions are called in the context of the `grunt` object that they are being ran with. This means you can access the `grunt` object through `this`.\n\n### Example\n\nThe following examples are available in grunt-exec's Gruntfile.\n\n```javascript\ngrunt.initConfig({\n  exec: {\n    remove_logs: {\n      command: 'rm -f *.log',\n      stdout: false,\n      stderr: false\n    },\n    list_files: {\n      cmd: 'ls -l **'\n    },\n    echo_grunt_version: {\n      cmd: function() { return 'echo ' + this.version; }\n    },\n    echo_name: {\n      cmd: function(firstName, lastName) {\n        var formattedName = [\n          lastName.toUpperCase(),\n          firstName.toUpperCase()\n        ].join(', ');\n\n        return 'echo ' + formattedName;\n      }\n    }\n  }\n});\n```\n\nTesting\n-------\n\n```\n$ cd grunt-exec\n$ npm test\n```\n\nIssues\n------\n\nFound a bug? Create an issue on GitHub.\n\nhttps://github.com/jharding/grunt-exec/issues\n\nVersioning\n----------\n\nFor transparency and insight into the release cycle, releases will be numbered with the follow format:\n\n`<major>.<minor>.<patch>`\n\nAnd constructed with the following guidelines:\n\n* Breaking backwards compatibility bumps the major\n* New additions without breaking backwards compatibility bumps the minor\n* Bug fixes and misc changes bump the patch\n\nFor more information on semantic versioning, please visit http://semver.org/.\n\nLicense\n-------\n\nCopyright (c) 2012 [Jake Harding](http://thejakeharding.com)  \nLicensed under the MIT License.\n","readmeFilename":"README.md","_id":"grunt-exec@0.4.1","dist":{"shasum":"17e6ad8ac4eb4efcb6a37b0f50be4eac8b3da6b7","tarball":"http://registry.npmjs.org/grunt-exec/-/grunt-exec-0.4.1.tgz"},"_npmVersion":"1.1.65","_npmUser":{"name":"jharding","email":"jacob.s.harding@gmail.com"},"maintainers":[{"name":"jharding","email":"jacob.s.harding@gmail.com"}],"directories":{}},"0.4.2":{"name":"grunt-exec","description":"Grunt task for executing shell commands.","version":"0.4.2","homepage":"https://github.com/jharding/grunt-exec","author":{"name":"Jake Harding","email":"jacob.s.harding@gmail.com"},"repository":{"type":"git","url":"git://github.com/jharding/grunt-exec.git"},"bugs":{"url":"https://github.com/jharding/grunt-exec/issues"},"licenses":[{"type":"MIT","url":"https://github.com/jharding/grunt-exec/blob/master/LICENSE-MIT"}],"main":"Gruntfile.js","engines":{"node":">=0.8.0"},"scripts":{"test":"/usr/bin/env node test/test.js"},"peerDependencies":{"grunt":"~0.4"},"devDependencies":{"grunt":"~0.4","grunt-contrib-jshint":"~0.1"},"keywords":["grunt","gruntplugin","shell"],"readme":"[![build status](https://secure.travis-ci.org/jharding/grunt-exec.png?branch=master)](http://travis-ci.org/jharding/grunt-exec)\ngrunt-exec\n==========\n\nGrunt plugin for executing shell commands.\n\nInstallation\n------------\n\nInstall grunt-exec using npm:\n\n```\n$ npm install grunt-exec\n```\n\nThen add this line to your project's *Gruntfile.js*:\n\n```javascript\ngrunt.loadNpmTasks('grunt-exec');\n```\n\nUsage\n-----\n\nThis plugin is a [multi task][types_of_tasks], meaning that grunt will automatically iterate over all exec targets if a target is not specified.\n\nIf the exit code generated by the specified shell command is greater than 0, grunt-exec will assume an error has occurred and will abort grunt immediately.\n\n[types_of_tasks]: https://github.com/gruntjs/grunt/blob/master/docs/types_of_tasks.md#multi-tasks\n\n### Properties\n\n*   __command__: The shell command to be executed. Must be a string or a function that returns a string. (alias: __cmd__)\n*   __stdout__: If `true`, stdout will be printed. Defaults to `true`.\n*   __stderr__: If `true`, stderr will be printed. Defaults to `true`.\n*   __cwd__: Current working directory of the shell command. Defaults to the directory containing your Gruntfile.\n*   __exitCode__: The expected exit code, task will fail if the actual exit code doesn't match. Defaults to `0`.\n*   __callback__: The callback function passed `child_process.exec`. Defaults to a noop.\n\n### Command Functions\n\nIf you plan on doing advanced stuff with grunt-exec, you'll most likely be using functions for the `command` property of your exec targets. This section details a couple of helpful tips about command functions that could help make your life easier.\n\n#### Passing arguments from the command line\n\nCommand functions can be called with arbitrary arguments. Let's say we have the following exec target that echoes a formatted name:\n\n```javascript\nexec: {\n  echo_name: {\n    cmd: function(firstName, lastName) {\n      var formattedName = [\n        lastName.toUpperCase(),\n        firstName.toUpperCase()\n      ].join(', ');\n\n      return 'echo ' + formattedName;\n    }\n  }\n}\n```\n\nIn order to get `SIMPSON, HOMER` echoed, you'd run `grunt exec:echo_name:homer:simpson` from the command line.\n\n### Accessing `grunt` object\n\nAll command functions are called in the context of the `grunt` object that they are being ran with. This means you can access the `grunt` object through `this`.\n\n### Example\n\nThe following examples are available in grunt-exec's Gruntfile.\n\n```javascript\ngrunt.initConfig({\n  exec: {\n    remove_logs: {\n      command: 'rm -f *.log',\n      stdout: false,\n      stderr: false\n    },\n    list_files: {\n      cmd: 'ls -l **'\n    },\n    echo_grunt_version: {\n      cmd: function() { return 'echo ' + this.version; }\n    },\n    echo_name: {\n      cmd: function(firstName, lastName) {\n        var formattedName = [\n          lastName.toUpperCase(),\n          firstName.toUpperCase()\n        ].join(', ');\n\n        return 'echo ' + formattedName;\n      }\n    }\n  }\n});\n```\n\nTesting\n-------\n\n```\n$ cd grunt-exec\n$ npm test\n```\n\nIssues\n------\n\nFound a bug? Create an issue on GitHub.\n\nhttps://github.com/jharding/grunt-exec/issues\n\nVersioning\n----------\n\nFor transparency and insight into the release cycle, releases will be numbered with the follow format:\n\n`<major>.<minor>.<patch>`\n\nAnd constructed with the following guidelines:\n\n* Breaking backwards compatibility bumps the major\n* New additions without breaking backwards compatibility bumps the minor\n* Bug fixes and misc changes bump the patch\n\nFor more information on semantic versioning, please visit http://semver.org/.\n\nLicense\n-------\n\nCopyright (c) 2012 [Jake Harding](http://thejakeharding.com)  \nLicensed under the MIT License.\n","readmeFilename":"README.md","_id":"grunt-exec@0.4.2","dist":{"shasum":"b4f3d08fbfdc775fbe922e1ea930906c7e18a893","tarball":"http://registry.npmjs.org/grunt-exec/-/grunt-exec-0.4.2.tgz"},"_npmVersion":"1.1.65","_npmUser":{"name":"jharding","email":"jacob.s.harding@gmail.com"},"maintainers":[{"name":"jharding","email":"jacob.s.harding@gmail.com"}],"directories":{}},"0.4.3":{"name":"grunt-exec","description":"Grunt task for executing shell commands.","version":"0.4.3","homepage":"https://github.com/jharding/grunt-exec","author":{"name":"Jake Harding","email":"jacob.s.harding@gmail.com"},"repository":{"type":"git","url":"git://github.com/jharding/grunt-exec.git"},"bugs":{"url":"https://github.com/jharding/grunt-exec/issues"},"licenses":[{"type":"MIT","url":"https://github.com/jharding/grunt-exec/blob/master/LICENSE-MIT"}],"main":"Gruntfile.js","engines":{"node":">=0.8.0"},"scripts":{"test":"/usr/bin/env node test/test.js"},"peerDependencies":{"grunt":"~0.4"},"devDependencies":{"grunt":"~0.4","grunt-contrib-jshint":"~0.1"},"keywords":["grunt","gruntplugin","shell"],"readme":"[![build status](https://secure.travis-ci.org/jharding/grunt-exec.png?branch=master)](http://travis-ci.org/jharding/grunt-exec)\ngrunt-exec\n==========\n\nGrunt plugin for executing shell commands.\n\nInstallation\n------------\n\nInstall grunt-exec using npm:\n\n```\n$ npm install grunt-exec\n```\n\nThen add this line to your project's *Gruntfile.js*:\n\n```javascript\ngrunt.loadNpmTasks('grunt-exec');\n```\n\nUsage\n-----\n\nThis plugin is a [multi task][types_of_tasks], meaning that grunt will \nautomatically iterate over all exec targets if a target is not specified.\n\nIf the exit code generated by the specified shell command is greater than 0, \ngrunt-exec will assume an error has occurred and will abort grunt immediately.\n\n[types_of_tasks]: https://github.com/gruntjs/grunt/blob/master/docs/types_of_tasks.md#multi-tasks\n\n### Properties\n\n*  __command__ (alias: __cmd__): The shell command to be executed. Must be a \n  string or a function that returns a string.\n*  __stdout__: If `true`, stdout will be printed. Defaults to `true`.\n*  __stderr__: If `true`, stderr will be printed. Defaults to `true`.\n*  __cwd__: Current working directory of the shell command. Defaults to the \n  directory containing your Gruntfile.\n*  __exitCode__ (alias: __exitCodes__): The expected exit code(s), task will \n  fail if the actual exit code doesn't match. Defaults to `0`. Can be an array \n  for multiple allowed exit codes.\n*  __callback__: The callback function passed `child_process.exec`. Defaults to \n  a noop.\n\n### Command Functions\n\nIf you plan on doing advanced stuff with grunt-exec, you'll most likely be using \nfunctions for the `command` property of your exec targets. This section details \na couple of helpful tips about command functions that could help make your life \neasier.\n\n#### Passing arguments from the command line\n\nCommand functions can be called with arbitrary arguments. Let's say we have the \nfollowing exec target that echoes a formatted name:\n\n```javascript\nexec: {\n  echo_name: {\n    cmd: function(firstName, lastName) {\n      var formattedName = [\n        lastName.toUpperCase(),\n        firstName.toUpperCase()\n      ].join(', ');\n\n      return 'echo ' + formattedName;\n    }\n  }\n}\n```\n\nIn order to get `SIMPSON, HOMER` echoed, you'd run \n`grunt exec:echo_name:homer:simpson` from the command line.\n\n### Accessing `grunt` object\n\nAll command functions are called in the context of the `grunt` object that they \nare being ran with. This means you can access the `grunt` object through `this`.\n\n### Example\n\nThe following examples are available in grunt-exec's Gruntfile.\n\n```javascript\ngrunt.initConfig({\n  exec: {\n    remove_logs: {\n      command: 'rm -f *.log',\n      stdout: false,\n      stderr: false\n    },\n    list_files: {\n      cmd: 'ls -l **'\n    },\n    echo_grunt_version: {\n      cmd: function() { return 'echo ' + this.version; }\n    },\n    echo_name: {\n      cmd: function(firstName, lastName) {\n        var formattedName = [\n          lastName.toUpperCase(),\n          firstName.toUpperCase()\n        ].join(', ');\n\n        return 'echo ' + formattedName;\n      }\n    }\n  }\n});\n```\n\nTesting\n-------\n\n```\n$ cd grunt-exec\n$ npm test\n```\n\nIssues\n------\n\nFound a bug? Create an issue on GitHub.\n\nhttps://github.com/jharding/grunt-exec/issues\n\nVersioning\n----------\n\nFor transparency and insight into the release cycle, releases will be numbered \nwith the follow format:\n\n`<major>.<minor>.<patch>`\n\nAnd constructed with the following guidelines:\n\n* Breaking backwards compatibility bumps the major\n* New additions without breaking backwards compatibility bumps the minor\n* Bug fixes and misc changes bump the patch\n\nFor more information on semantic versioning, please visit http://semver.org/.\n\nLicense\n-------\n\nCopyright (c) 2012 [Jake Harding](http://thejakeharding.com)  \nLicensed under the MIT License.\n","readmeFilename":"README.md","_id":"grunt-exec@0.4.3","dist":{"shasum":"31d2b9b7b1ef1da9aa1fe805ae547f14543cba0e","tarball":"http://registry.npmjs.org/grunt-exec/-/grunt-exec-0.4.3.tgz"},"_from":".","_npmVersion":"1.3.11","_npmUser":{"name":"jharding","email":"jacob.s.harding@gmail.com"},"maintainers":[{"name":"jharding","email":"jacob.s.harding@gmail.com"}],"directories":{}},"0.4.0-rc1":{"name":"grunt-exec","description":"Grunt task for executing shell commands.","version":"0.4.0-rc1","homepage":"https://github.com/jharding/grunt-exec","author":{"name":"Jake Harding","email":"jacob.s.harding@gmail.com"},"repository":{"type":"git","url":"git://github.com/jharding/grunt-exec.git"},"bugs":{"url":"https://github.com/jharding/grunt-exec/issues"},"licenses":[{"type":"MIT","url":"https://github.com/jharding/grunt-exec/blob/master/LICENSE-MIT"}],"main":"Gruntfile.js","engines":{"node":">=0.8.0"},"scripts":{"test":"/usr/bin/env node test/test.js"},"peerDependencies":{"grunt":"~0.4"},"devDependencies":{"grunt":"~0.4","grunt-contrib-jshint":"~0.1"},"keywords":["grunt","gruntplugin","shell"],"readme":"[![build status](https://secure.travis-ci.org/jharding/grunt-exec.png?branch=master)](http://travis-ci.org/jharding/grunt-exec)\ngrunt-exec\n==========\n\nGrunt plugin for executing shell commands.\n\nInstallation\n------------\n\nInstall grunt-exec using npm:\n\n```\n$ npm install grunt-exec\n```\n\nThen add this line to your project's *Gruntfile.js*:\n\n```javascript\ngrunt.loadNpmTasks('grunt-exec');\n```\n\nUsage\n-----\n\nThis plugin is a [multi task][types_of_tasks], meaning that grunt will automatically iterate over all exec targets if a target is not specified.\n\nIf the exit code generated by the specified shell command is greater than 0, grunt-exec will assume an error has occurred and will abort grunt immediately.\n\n[types_of_tasks]: https://github.com/gruntjs/grunt/blob/master/docs/types_of_tasks.md#multi-tasks\n\n### Properties\n\n*   __command__: The shell command to be executed. Must be a string or a function that returns a string. (alias: __cmd__)\n*   __stdout__: If `true`, stdout will be printed. Defaults to `true`.\n*   __stderr__: If `true`, stderr will be printed. Defaults to `true`.\n\n### Command Functions\n\nIf you plan on doing advanced stuff with grunt-exec, you'll most likely be using functions for the `command` property of your exec targets. This section details a couple of helpful tips about command functions that could help make your life easier.\n\n#### Passing arguments from the command line\n\nCommand functions can be called with arbitrary arguments. Let's say we have the following exec target that echoes a formatted name:\n\n```javascript\nexec: {\n  echo_name: {\n    cmd: function(firstName, lastName) {\n      var formattedName = [\n        lastName.toUpperCase(),\n        firstName.toUpperCase()\n      ].join(', ');\n\n      return 'echo ' + formattedName;\n    }\n  }\n}\n```\n\nIn order to get `SIMPSON, HOMER` echoed, you'd run `grunt exec:echo_name:homer:simpson` from the command line.\n\n### Accessing `grunt` object\n\nAll command functions are called in the context of the `grunt` object that they are being ran with. This means you can access the `grunt` object through `this`.\n\n### Example\n\nThe following examples are available in grunt-exec's Gruntfile.\n\n```javascript\ngrunt.initConfig({\n  exec: {\n    remove_logs: {\n      command: 'rm -f *.log',\n      stdout: false,\n      stderr: false\n    },\n    list_files: {\n      cmd: 'ls -l **'\n    },\n    echo_grunt_version: {\n      cmd: function() { return 'echo ' + this.version; }\n    },\n    echo_name: {\n      cmd: function(firstName, lastName) {\n        var formattedName = [\n          lastName.toUpperCase(),\n          firstName.toUpperCase()\n        ].join(', ');\n\n        return 'echo ' + formattedName;\n      }\n    }\n  }\n});\n```\n\nTesting\n-------\n\n```\n$ cd grunt-exec\n$ npm test\n```\n\nIssues\n------\n\nFound a bug? Create an issue on GitHub.\n\nhttps://github.com/jharding/grunt-exec/issues\n\nVersioning\n----------\n\nFor transparency and insight into the release cycle, releases will be numbered with the follow format:\n\n`<major>.<minor>.<patch>`\n\nAnd constructed with the following guidelines:\n\n* Breaking backwards compatibility bumps the major\n* New additions without breaking backwards compatibility bumps the minor\n* Bug fixes and misc changes bump the patch\n\nFor more information on semantic versioning, please visit http://semver.org/.\n\nLicense\n-------\n\nCopyright (c) 2012 [Jake Harding](http://thejakeharding.com)  \nLicensed under the MIT License.\n","readmeFilename":"README.md","_id":"grunt-exec@0.4.0-rc1","dist":{"shasum":"81dc355c1781e4eea6682bc45849e200931a7b1b","tarball":"http://registry.npmjs.org/grunt-exec/-/grunt-exec-0.4.0rc1.tgz"},"_npmVersion":"1.1.65","_npmUser":{"name":"jharding","email":"jacob.s.harding@gmail.com"},"maintainers":[{"name":"jharding","email":"jacob.s.harding@gmail.com"}],"directories":{}}},"readme":"# grunt-exec\n\nGrunt task for executing shell commands.\n\n## Getting Started\nInstall this grunt plugin next to your project's [grunt.js gruntfile][getting_started] with: `npm install grunt-exec`\n\nThen add this line to your project's `grunt.js` gruntfile:\n\n```javascript\ntask.loadNpmTasks('grunt-exec');\n```\n\n[grunt]: https://github.com/cowboy/grunt\n[getting_started]: https://github.com/cowboy/grunt/blob/master/docs/getting_started.md\n\n## Documentation\nThis task is a [multi task][types_of_tasks], meaning that grunt will automatically iterate over all `exec` targets if a target is not specified.\n\n[types_of_tasks]: https://github.com/cowboy/grunt/blob/master/docs/types_of_tasks.md\n\n### Target Properties\n*   __command__*(required)*: The shell command to be executed. Must be a string.\n*   __stdout__*(optional)*: Set `true` if you want the stdout to be printed. Defaults to `false`.\n*   __stderr__*(optional)*: Set `true` if you want the stderr to be printed. Defaults to `false`.\n\n### Example\n\n```javascript\n    grunt.initConfig({\n        exec: {\n            remove_logs: {\n                command: 'rm -f *.log'\n            }\n            list_files: {\n                command: 'ls -l **',\n                stdout: true\n            }\n        }\n    });\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [grunt][grunt].\n\n## Release History\n*   __04/08/2012 - 0.1.0__: Initial release.\n\n## License\nCopyright (c) 2012 Jake Harding  \nLicensed under the MIT license.\n","maintainers":[{"name":"jharding","email":"jacob.s.harding@gmail.com"}],"time":{"0.1.0":"2012-04-08T11:19:35.834Z","0.1.1":"2012-04-16T22:36:50.806Z","0.2.0":"2012-08-24T06:19:06.155Z","0.2.1":"2012-09-15T06:18:33.327Z","0.3.0":"2012-09-15T06:46:43.210Z","0.4.0":"2013-02-18T19:52:59.969Z","0.4.1":"2013-05-24T23:24:20.482Z","0.4.2":"2013-06-25T00:10:55.607Z","0.4.3":"2013-12-25T19:37:49.450Z","0.4.0-rc1":"2013-02-18T19:48:53.207Z"},"author":{"name":"Jake Harding","email":"jacob.s.harding@gmail.com"},"repository":{"type":"git","url":"git://github.com/jharding/grunt-exec.git"},"users":{"jharding":true},"_attachments":{},"_etag":"\"1MJQUHFLTRLVPCSFUUCZOXMP1\""}